library(pacman)
p_load(tidyverse,
naniar)
notes <- read_tsv("data/notes-00000.tsv")
spec(notes)
s_notes <- slice_sample(notes,n = 10000)
as_tibble(s_notes) %>% select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
vis_miss(s_notes)
table(s_notes$classification,s_notes$misleadingOther)
table(s_notes$classification,s_notes$misleadingFactualError)
table(s_notes$classification,s_notes$notMisleadingOther)
table(s_notes$classification,s_notes$isMediaNote)
table(s_notes$classification,s_notes$trustworthySources)
length(unique(s_notes$noteId))
# the observations in the dataset are unique
length(unique(s_notes$noteAuthorParticipantId))
head(table(s_notes$noteAuthorParticipantId))
head(sort(table(s_notes$noteAuthorParticipantId)))
head(sort(table(s_notes$noteAuthorParticipantId),decreasing = F))
head(sort(table(s_notes$noteAuthorParticipantId),decreasing = T))
head(sort(table(s_notes$noteAuthorParticipantId),decreasing = T),n = 10)
head(sort(table(s_notes$noteAuthorParticipantId),decreasing = T),n = 25 )
hist(table(s_notes$noteAuthorParticipantId),decreasing = T))
table(s_notes$noteAuthorParticipantId),decreasing = T)
hist(table(s_notes$noteAuthorParticipantId),decreasing = T)
table(table(s_notes$noteAuthorParticipantId),decreasing = T)
table(table(s_notes$noteAuthorParticipantId))
barplot(table(table(s_notes$noteAuthorParticipantId)))
barplot(table(table(s_notes$noteAuthorParticipantId)),
xlab = "Number of Notes",
ylab = "Number of Authors",
main = "Distribution of Notes Published by Author")
head(sort(table(s_notes$noteAuthorParticipantId),decreasing = T),n = 25 )
as_tibble(s_notes) %>% select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
s_notes$classification
s_notes$classification %>% table()
select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
as_tibble(s_notes) %>%
filter(classification = "NOT_MISLEADING") %>%
select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
as_tibble(s_notes) %>%
filter(classification == "NOT_MISLEADING") %>%
select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
as_tibble(s_notes) %>%
filter(classification == "MISINFORMED_OR_POTENTIALLY_MISLEADING") %>%
select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
vis_miss(s_notes)
status <- read_tsv("data/noteStatusHistory-00000.tsv")
spec(status)
s_status <- slice_sample(status,n = 10000)
vis_miss(s_status)
# the observations in the dataset are unique
length(unique(s_status$noteId))
sum(s_notes$noteId %in% s_status$noteId)
sum(notes$noteId %in% status$noteId)
barplot(status$timestampMillisOfFirstNonNMRStatus)
barplot(s_status$timestampMillisOfFirstNonNMRStatus)
s_status$timestampMillisOfFirstNonNMRStatus
sum(s_status$timestampMillisOfFirstNonNMRStatus==-1)
length(unique(s_notes$tweetId))
length(unique(s_notes$tweetId))
# notes ----
# the observations in the dataset are unique for each note
length(unique(notes$noteId))
length(unique(notes$tweetId))
barplot(table(table(s_notes$tweetId)),
xlab = "Number of Notes",
ylab = "Number of Authors",
main = "Distribution of Notes Published by Author")
table(table(s_notes$tweetId)
)
barplot(table(table(s_notes$tweetId)),
xlab = "Number of Notes",
ylab = "Number of Tweets",
main = "Distribution of Notes Published by Author")
barplot(table(table(s_notes$tweetId)),
xlab = "Number of Notes",
ylab = "Number of Tweets",
main = "Distribution of Notes Published by Tweet")
## Tweets ----
# most of the notes refer to a single
length(unique(notes$tweetId))
## Tweets ----
# some tweets have more than one note
# most of the tweets have a single note
length(unique(notes$tweetId))
barplot(table(table(s_notes$tweetId)),
xlab = "Number of Notes",
ylab = "Number of Tweets",
main = "Distribution of Notes Published by Tweet")
table(table(s_notes$tweetId)
)
as_tibble(s_notes) %>%
filter(classification == "MISINFORMED_OR_POTENTIALLY_MISLEADING") %>%
select_if(is.numeric) %>%
map_dbl(sum) %>% as.data.frame()
table(s_notes$classification,s_notes$notMisleadingOther)
table(s_notes$classification,s_notes$isMediaNote)
table(s_notes$classification,s_notes$trustworthySources)
# Contains -1 if the note never left “Needs More Ratings” status.
sum(s_status$timestampMillisOfFirstNonNMRStatus==-1)
# Contains -1 if the note never left “Needs More Ratings” status.
sum(status$timestampMillisOfFirstNonNMRStatus==-1)
barplot(status$currentStatus)
status$currentStatus
barplot(table(status$currentStatus))
# the observations in the dataset are unique
length(unique(s_status$noteId))
# the observations in the dataset are unique
length(unique(status$noteId))
table(status$currentStatus, status$lockedStatus)
r0 <- read_tsv("data/ratings-00000.tsv")
r1 <- read_tsv("data/ratings-00001.tsv")
r0
r0 <- read_tsv("data/ratings-00000.tsv")
spec(r0)
sum(notes$noteId %in% r0$noteId)
# most of the notes are in the ratings dataset
sum(r0$noteId %in% notes$noteId)
# most of the notes are in the ratings dataset
sum(r1$noteId %in% notes$noteId)
barplot(table(table(r0$noteId)),
xlab = "Number of Notes",
ylab = "Number of Tweets",
main = "Distribution of Notes Published by Tweet")
barplot(table(table(r0$noteId)),
xlab = "Number of Ratings",
ylab = "Number of Notes",
main = "Distribution of Notes Published by Tweet")
table(table(r0$noteId)
)
